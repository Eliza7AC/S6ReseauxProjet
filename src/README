Projet Réseaux - L3 Informatique Groupe 1
CHANOZ Angéline, Adam FARESSE



########################################
######### OPTIONAL - COMMENTS ##########
########################################

To see comments in right colors, please do the following.

Go to:
1) "File" tab
2) "Settings..." tab
3) select "Editor"
4) and then "TODO" section
5)Create a new pattern by adding the following infos:
pattern: \bINFO\b.*
foreground: 4183C0



########################################
############## COMPILING ###############
########################################

in src directory, execute:
    javac ./*/*.java
(first * matches all packages, second * matches all java classes)


(XOR compiling package by package:)
    javac ./ClientSide/*.java
    javac ./DataNetwork/*.java
    javac ./request/*.java
    javac ./ServerSide/*.java
    javac ./Storage/*.java



########################################
############### RUNNING ################
########################################

    java ServerSide/Server
    java ClientSide/Publisher



########################################
############# FUNCTIONING ##############
########################################

1)  Server is launched (ServerSide.Server Class) and listens to the network.

2)  Client is launched (Publish Class for example) and a Request object is created
    with a header and possibly body and some others info if necessary.
    The "END" word delimits the end of the request.
    Client Class is just an abstract class and each type of client (Publisher, Follower, Repost)
    extends this class.
    Same thing with RequestClient and PUBLISH, RCV_IDS, RCV_MSG, etc.

3)  The server receives the data from the client (a String object from ByteBuffer)
    and analyzes it to recreate a request object.
    At the same time, the server adds the info of the request to the database, if necessary.
    Storage.Database Class allows to handle data (stored messages, etc.)
    retrieved from Persistence files (PersistenceMsg and PersistenceSubcription).

4)  The server prepares an answer thanks to ProcessingData Class.

5)  The server sends the answer to the client.

